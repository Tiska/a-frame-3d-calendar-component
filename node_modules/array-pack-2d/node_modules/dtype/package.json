{
  "_args": [
    [
      {
        "raw": "dtype@^1.0.0",
        "scope": null,
        "escapedName": "dtype",
        "name": "dtype",
        "rawSpec": "^1.0.0",
        "spec": ">=1.0.0 <2.0.0",
        "type": "range"
      },
      "/Users/abody/Workspace/VSCT/aframe-a-frame-3D-calendar-component/node_modules/array-pack-2d"
    ]
  ],
  "_from": "dtype@>=1.0.0 <2.0.0",
  "_id": "dtype@1.0.0",
  "_inCache": true,
  "_location": "/array-pack-2d/dtype",
  "_nodeVersion": "1.8.1",
  "_npmUser": {
    "name": "shama",
    "email": "kyle@dontkry.com"
  },
  "_npmVersion": "2.8.3",
  "_phantomChildren": {},
  "_requested": {
    "raw": "dtype@^1.0.0",
    "scope": null,
    "escapedName": "dtype",
    "name": "dtype",
    "rawSpec": "^1.0.0",
    "spec": ">=1.0.0 <2.0.0",
    "type": "range"
  },
  "_requiredBy": [
    "/array-pack-2d"
  ],
  "_resolved": "https://registry.npmjs.org/dtype/-/dtype-1.0.0.tgz",
  "_shasum": "ae34ffa282673715203582d61bbdd0aad3cba3e7",
  "_shrinkwrap": null,
  "_spec": "dtype@^1.0.0",
  "_where": "/Users/abody/Workspace/VSCT/aframe-a-frame-3D-calendar-component/node_modules/array-pack-2d",
  "author": {
    "name": "Kyle Robinson Young",
    "email": "kyle@dontkry.com",
    "url": "http://dontkry.com"
  },
  "bugs": {
    "url": "https://github.com/shama/dtype/issues"
  },
  "dependencies": {},
  "description": "Return a data type from a string representing the type",
  "devDependencies": {
    "tape": "^4.0.0"
  },
  "directories": {},
  "dist": {
    "shasum": "ae34ffa282673715203582d61bbdd0aad3cba3e7",
    "tarball": "https://registry.npmjs.org/dtype/-/dtype-1.0.0.tgz"
  },
  "engines": {
    "node": ">= 0.8.0"
  },
  "gitHead": "b6c78968963f8565a9f985dd22816b955dee5aba",
  "homepage": "https://github.com/shama/dtype",
  "keywords": [
    "ndarray",
    "array",
    "typed"
  ],
  "licenses": [
    {
      "type": "MIT",
      "url": "https://github.com/shama/dtype/blob/master/LICENSE-MIT"
    }
  ],
  "maintainers": [
    {
      "name": "shama",
      "email": "kyle@dontkry.com"
    },
    {
      "name": "mattdesl",
      "email": "dave.des@gmail.com"
    }
  ],
  "name": "dtype",
  "optionalDependencies": {},
  "readme": "# dtype\n\nReturn a data type from a string representing the data type.\n\nMostly useful for using with [ndarray](https://github.com/mikolalysenko/ndarray)\nwhere you would like instantiate a typed array of the same `array.dtype`.\n\n## example\n\n```js\nvar dtype = require('dtype')\nvar ndarray = require('ndarray')\n\nvar arr = ndarray(new Int8Array(32))\n\n// some time later\n\nvar newarr = ndarray(new (dtype(arr.dtype)))\n```\n\n## API\n`dtype(string)` will return the following data types based on the strings given:\n\nData type | String\n--------: | :-----\n`Int8Array` | \"int8\"\n`Int16Array` | \"int16\"\n`Int32Array` | \"int32\"\n`Uint8Array` | \"uint8\"\n`Uint16Array` | \"uint16\"\n`Uint32Array` | \"uint32\"\n`Float32Array` | \"float32\"\n`Float64Array` | \"float64\"\n`Array` | \"array\"\n`Uint8ClampedArray` | \"uint8_clamped\"\n`ArrayBuffer` | \"generic\"\n`ArrayBuffer` | \"data\"\n`ArrayBuffer` | \"dataview\"\n`Buffer` | \"buffer\"\n\n> If `Buffer` is not present then `\"buffer\"` will return `ArrayBuffer`.\n\n## install\n\nWith [npm](https://npmjs.org) do:\n\n```\nnpm install dtype\n```\n\nUse [browserify](http://browserify.org) to `require('dtype')`.\n\n## release history\n* 0.1.0 - initial release\n\n## license\nCopyright (c) 2013 Kyle Robinson Young<br/>\nLicensed under the MIT license.\n",
  "readmeFilename": "README.md",
  "repository": {
    "type": "git",
    "url": "git://github.com/shama/dtype.git"
  },
  "scripts": {
    "test": "node test.js"
  },
  "version": "1.0.0"
}
